{"version":3,"sources":["Home.js","components/Icon.js","components/TimelineInfo.js","Projects.js","Resume.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Jumbo.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","assets/project.png","assets/CV.pdf","assets/bkimg.jpg"],"names":["Home","Styles","styled","div","Icon","className","alt","src","ProjectIcon","height","width","TimelineInfo","props","contentStyle","background","color","contentArrowStyle","borderRight","date","iconClassName","iconStyle","icon","display","tools","map","tool","Badge","pill","variant","title","reason","details","line","Fragment","links","element","Button","href","link","size","desc","Projects","layout","projectData","data","key","id","Array","from","Resume","state","updateWindowDimensions","bind","this","window","addEventListener","removeEventListener","setState","innerWidth","calculateWidth","file","CV","options","workerSrc","pageNumber","Component","NoMatch","Layout","Container","children","NavigationBar","Navbar","expand","Brand","to","Toggle","aria-controls","Collapse","Nav","Item","Link","mtnImage","Jumbo","Jumbotron","fluid","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.485b3c43.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h2>Hello World</h2>\r\n    <p>Stare</p>\r\n    <p>Stare</p>\r\n    <p>Stare</p>\r\n  </div>\r\n)\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport ProjectIcon from '../assets/project.png';\r\n\r\nconst Styles = styled.div`\r\n  .logo-style{\r\n    margin: 0;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%)\r\n  }\r\n`;\r\n\r\nconst Icon = () => (\r\n  <Styles>\r\n    <img className=\"logo-style\" alt=\"Logo for timeline\" src={ProjectIcon} height={28} width={28}/>\r\n  </Styles>\r\n);\r\n\r\nexport default Icon;\r\n","import React from 'react'\r\nimport { VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport Icon from './Icon';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n//Icons made by <a href=\"https://www.flaticon.com/authors/ddara\" title=\"dDara\">dDara</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\r\n\r\nfunction TimelineInfo(props){\r\n  return(\r\n      <VerticalTimelineElement\r\n        className=\"vertical-timeline-element--work\"\r\n        contentStyle={{ background: '#f8f7fc', color: '#000' }}\r\n        contentArrowStyle={{ borderRight: '7px solid  #f8f7fc' }}\r\n        date={props.date}\r\n        iconClassName=\"circle-border\"\r\n        iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\r\n        icon={<Icon />}\r\n      >\r\n        <h5 display=\"flex\">\r\n          {props.tools.map(tool => (\r\n            <Badge pill variant=\"dark\">{tool}</Badge>\r\n          ))}\r\n        </h5>\r\n        <h3 className=\"vertical-timeline-element-title\">{props.title}</h3>\r\n        <h5 className=\"vertical-timeline-element-subtitle\"><i>{props.reason}</i></h5>\r\n        <p>\r\n          {props.details.map(line => (\r\n            <React.Fragment>\r\n              {line} <br />\r\n            </React.Fragment>\r\n          ))}\r\n          <div className=\"bthContainer\">\r\n            {props.links.map(element => (\r\n              <Button variant=\"outline-primary\" href={element.link} size=\"sm\">{element.desc}</Button>\r\n            ))}\r\n          </div>\r\n        </p>\r\n      </VerticalTimelineElement>\r\n  )\r\n};\r\n\r\nexport default TimelineInfo;\r\n//{props.details[0] + \"\\n\"} <br />\r\n//{props.details[1]} <br />\r\n","import React from 'react'\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport styled from 'styled-components';\r\nimport TimelineInfo from './components/TimelineInfo';\r\nimport projectData from './assets/projectData.json';\r\nimport Icon from './components/Icon';\r\n\r\nconst Styles = styled.div`\r\n  .vertical-timeline::before{\r\n    background: #1976d2;\r\n  }\r\n  .circle-border{\r\n    box-shadow: 0 0 0 4px #1976d2, inset 0 2px 0 rgba(0, 0, 0, 0.08), 0 3px 0 4px rgba(0, 0, 0, 0.05);\r\n  }\r\n  .vertical-timeline-element--work .vertical-timeline-element-content {\r\n    border-top: 3px solid #1976d2;\r\n  }\r\n  .badge-pill {\r\n    margin-right: .2em;\r\n    background: #1976d2;\r\n  }\r\n  .btn-outline-primary {\r\n    margin-top: 5px;\r\n    margin-right: .6em;\r\n  }\r\n  .bthContainer{\r\n    display:block;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nconst Projects = () => (\r\n  <Styles>\r\n    <h2>Projects</h2>\r\n    <br/>\r\n    <VerticalTimeline layout='1-column'>\r\n      {projectData.map(data => (\r\n        <TimelineInfo\r\n          key={data.id}\r\n          date={data.date}\r\n          title={data.title}\r\n          reason={data.reason}\r\n          tools={Array.from(data.tools)}\r\n          details={Array.from(data.details)}\r\n          links={Array.from(data.links)}\r\n        />\r\n      ))}\r\n    </VerticalTimeline>\r\n    <br/>\r\n    <p>\r\n      Icons made by <a href=\"https://www.flaticon.com/authors/ddara\" title=\"dDara\">dDara</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\r\n    </p>\r\n  </Styles>\r\n)\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport styled from 'styled-components';\r\nimport CV from './assets/CV.pdf';\r\n\r\nconst Styles = styled.div`\r\n  .pdf {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nclass Resume extends Component {\r\n  state = {\r\n    width: 0\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { width: 0 };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  calculateWidth() {\r\n    let calculateWidth = this.state.width - 20;\r\n    return calculateWidth < 1000 ? calculateWidth : 1000;\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <Styles>\r\n        <h2>Resume</h2>\r\n        <Document className=\"pdf\" file={CV} options={{ workerSrc: \"/pdf.worker.js\" }}>\r\n          <Page pageNumber={1} width={this.calculateWidth()}/>\r\n        </Document>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React from 'react'\r\n\r\nexport const NoMatch = () => (\r\n  <div>\r\n    <h2>No Match</h2>\r\n  </div>\r\n)\r\n\r\nexport default NoMatch;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst Layout = (props) => (\r\n  <Container>\r\n    {props.children}\r\n  </Container>\r\n)\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/NavBar';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n  .navbar {\r\n    background-color: #222;\r\n  }\r\n\r\n  a {\r\n    color : #bbb;\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavigationBar = () => (\r\n  <Styles>\r\n    <Navbar expand=\"lg\" variant=\"dark\">\r\n      <Navbar.Brand>\r\n        <Link to=\"/\">PSYmoom</Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Item>\r\n            <Nav.Link>\r\n              <Link to=\"/\">Home</Link>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link>\r\n              <Link to=\"/projects\">Projects</Link>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link>\r\n              <Link to=\"/resume\">Resume</Link>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </Styles>\r\n)\r\n\r\nexport default NavigationBar;\r\n","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport styled from 'styled-components';\r\nimport mtnImage from '../assets/bkimg.jpg';\r\n\r\nconst Styles = styled.div`\r\n  .jumbo {\r\n    background: url(${mtnImage});\r\n    background-size: cover;\r\n    height: 200px;\r\n    position: relative;\r\n    z-index: -2;\r\n  }\r\n  .overlay {\r\n    background-color: #000;\r\n    opacity: 0.6;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: -1;\r\n  }\r\n  .textIn {\r\n    color:#efefef\r\n  }\r\n`;\r\n\r\nconst Jumbo = () => (\r\n  <Styles>\r\n    <Jumbotron fluid className=\"jumbo\">\r\n      <div className=\"overlay\"></div>\r\n      <Container>\r\n        <h1 className=\"textIn\">Hey! I am Symoom</h1>\r\n        <p className=\"textIn\">This is a website to help me keep track of my projects.</p>\r\n      </Container>\r\n    </Jumbotron>\r\n  </Styles>\r\n)\r\n\r\nexport default Jumbo;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './Home';\nimport Projects from './Projects';\nimport Resume from './Resume';\nimport NoMatch from './NoMatch';\nimport Layout from './components/Layout';\nimport NavigationBar from './components/NavigationBar';\nimport Jumbo from './components/Jumbo';\n\nfunction App() {\n  return (\n    <Router>\n      <NavigationBar />\n      <Jumbo />\n      <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/projects\" component={Projects} />\n            <Route exact path=\"/resume\" component={Resume} />\n            <Route component={NoMatch} />\n          </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 40;","module.exports = __webpack_public_path__ + \"static/media/project.6b445645.png\";","module.exports = __webpack_public_path__ + \"static/media/CV.193fd0ab.pdf\";","module.exports = __webpack_public_path__ + \"static/media/bkimg.11f955cf.jpg\";"],"sourceRoot":""}