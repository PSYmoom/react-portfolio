{"version":3,"sources":["AboutMe.js","components/ColorInput.js","ColorChanger.js","components/Seperator.js","components/FeaturedProjects.js","Home.js","components/Icon.js","components/TimelineInfo.js","Projects.js","Resume.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Jumbo.js","components/ScrollUp.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","assets/CV.pdf","assets/bkimg.jpg"],"names":["AboutMe","Fragment","className","ColorInput","FormGroup","FormLabel","this","props","name","InputGroup","FormControl","type","aria-label","aria-describedby","onChange","event","onValueChange","names","target","value","isInvalid","error","Prepend","Button","variant","onClick","onButtonClick","Feedback","Component","Styles","styled","div","ColorChanger","Container","Object","keys","allComponents","map","component","Row","variable","Col","sm","md","length","variables","Seperator","backgroundColor","borderColor","FeaturedProjects","container","validated","to","Home","Icon","icon","faCog","TimelineInfo","id","contentStyle","background","color","contentArrowStyle","borderRight","date","iconClassName","iconStyle","display","tools","tool","Badge","pill","title","reason","details","line","links","element","href","link","size","desc","primaryColor","secondaryColor","Projects","others","button","layout","projectData","data","key","Array","from","Resume","state","width","updateWindowDimensions","bind","window","addEventListener","removeEventListener","setState","innerWidth","calculateWidth","file","CV","options","workerSrc","pageNumber","NoMatch","Layout","children","textColor","hoverColor","NavigationBar","navbar","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","Item","Link","mtnImage","Jumbo","Jumbotron","fluid","ScrollUp","hasScrolled","updateScrolled","pageYOffset","scrollTo","top","behavior","faChevronUp","App","upperbound","lowerbound","colorChanger","unvalidated","handleValueChange","handleButtonClick","newState","update","$set","String","toUpperCase","basename","exact","path","render","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","webpackEmptyContext","req","e","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.f714ad8c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AboutMe = () => (\r\n  <React.Fragment>\r\n    <h2>About Me</h2>\r\n    <p className=\"paragraph\">\r\n      I am currently a 2<sup>nd</sup> year student at the University of Ottawa pursuing a double major in Electrical Enginerring and Computing Technology.\r\n      I absolutly love trying out new things and do not mind getting my hands dirty in the process.\r\n      I cannot resist a good challange and will keep coming back to it until it has been finally solved.\r\n      I learn through my mistakes, and as a result, am not afraid of making during the learning process.\r\n      <br /> <br/>\r\n      I have many skills, but color theory is not my strong suit.\r\n      As a result, I have made it possible for you to change it as you see fit.\r\n      If you think there is a color combination that works really well, feel free to email me about it and I might change that to the default color!\r\n    </p>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default AboutMe;\r\n","import React, { Component } from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport FormGroup from 'react-bootstrap/FormGroup';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass ColorInput extends Component {\r\n  render() {\r\n    return(\r\n      <FormGroup>\r\n        <FormLabel>{this.props.name}</FormLabel>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            type=\"text\"\r\n            aria-label=\"Small\"\r\n            aria-describedby=\"inputGroup-sizing-sm\"\r\n            onChange={(event) => {this.props.onValueChange(this.props.names, event.target.value)}}\r\n            isInvalid={this.props.error}\r\n          />\r\n          <InputGroup.Prepend>\r\n            <Button\r\n              variant=\"outline-secondary\"\r\n              onClick={() => {this.props.onButtonClick(this.props.names)}}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </InputGroup.Prepend>\r\n          <FormControl.Feedback type=\"invalid\">\r\n            Please enter a valid hex number.\r\n          </FormControl.Feedback>\r\n        </InputGroup>\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorInput;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport styled from 'styled-components';\r\nimport ColorInput from './components/ColorInput';\r\n\r\nconst Styles = styled.div`\r\n  .container{\r\n    background-color:#f8f7fc;\r\n    padding-top:15px;\r\n  }\r\n  .heading-two{\r\n    margin-top:8px;\r\n    margin-bottom:10px;\r\n  }\r\n`;\r\n\r\nclass ColorChanger extends Component {\r\n  render() {\r\n   return(\r\n     <Styles>\r\n      <Container>\r\n        <h2 className=\"heading-two\">Color Changer</h2>\r\n        {Object.keys(this.props.allComponents).map((component) => (\r\n          <React.Fragment>\r\n            <h4> {component} </h4>\r\n            <Row>\r\n              {Object.keys(this.props.allComponents.[component]).map((variable) => (\r\n                <Col sm={true} md={this.props.allComponents.[component].length / 12}>\r\n                 <ColorInput\r\n                  name={variable}\r\n                  names={[component, variable]}\r\n                  error={this.props.allComponents.[component].[variable].error}\r\n                  onValueChange={(variables, value) => {this.props.onValueChange(variables, value)}}\r\n                  onButtonClick={(variables) => {this.props.onButtonClick(variables)}}\r\n                  />\r\n                 </Col>\r\n              ))}\r\n            </Row>\r\n          </React.Fragment>\r\n        ))}\r\n      </Container>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\nexport default ColorChanger;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n  .seperator{\r\n    margin-top:25px;\r\n    border-width: 2px;\r\n  }\r\n`;\r\n\r\nconst Seperator = () => (\r\n  <Styles>\r\n    <hr className=\"seperator\"/>\r\n  </Styles>\r\n);\r\n\r\nexport default Seperator;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport styled from 'styled-components';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nconst Styles = styled.div`\r\n  .projectLinks {\r\n      font-style: italic;\r\n      background: ${props => (props.backgroundColor)};\r\n      box-shadow: ${props => (\"0 0 0 4px \" + props.borderColor)};\r\n      padding: 10px;\r\n      height: 50px;\r\n      &:hover {\r\n        padding: 5px;\r\n      }\r\n    }\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n    &:hover {\r\n      font-size:150%;\r\n      color: white;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FeaturedProjects = (props) => (\r\n  <Styles\r\n    backgroundColor={props.container.[\"Background Color\"].validated}\r\n    borderColor={props.container.[\"Border Color\"].validated}\r\n  >\r\n    <h2>Featured Projects</h2>\r\n    <p className=\"paragraph\">\r\n      Here are some of the projects I had a blast working on.\r\n    </p>\r\n    <Container>\r\n      <Row>\r\n        <Col md=\"4\" className=\"projectLinks\" >\r\n          <Link to=\"/projects#7\" >MinecraftBot</Link>\r\n        </Col>\r\n        <Col md=\"4\" className=\"projectLinks\" >\r\n          <Link to=\"/projects#6\" >CarePost</Link>\r\n        </Col>\r\n        <Col md=\"4\" className=\"projectLinks\" >\r\n          <Link to=\"/projects#5\" >Offroad Vehicle</Link>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md=\"6\" className=\"projectLinks\" >\r\n          <Link to=\"/projects#3\" >F1 in Schools</Link>\r\n        </Col>\r\n        <Col md=\"6\" className=\"projectLinks\" >\r\n          <Link to=\"/projects#1\" >Kirby Saves Christmas</Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </Styles>\r\n);\r\n\r\nexport default FeaturedProjects;\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport AboutMe from './AboutMe';\r\nimport ColorChanger from './ColorChanger';\r\nimport Seperator from './components/Seperator';\r\nimport FeaturedProjects from './components/FeaturedProjects';\r\n\r\nconst Styles = styled.div`\r\n  .paragraph{\r\n    padding:10px;\r\n  }\r\n`;\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return(\r\n      <Styles>\r\n        <AboutMe />\r\n        <ColorChanger onValueChange={(variables, value) => {this.props.onValueChange(variables, value)}} onButtonClick={(variables) => {this.props.onButtonClick(variables)}} allComponents={this.props.allComponents} />\r\n        <Seperator />\r\n        <FeaturedProjects container={this.props.allComponents.[\"Others\"]}/>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Styles = styled.div`\r\n  .logo-style{\r\n    margin: 0;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst Icon = () => (\r\n  <Styles>\r\n    <FontAwesomeIcon  className=\"logo-style\" icon={faCog}/>\r\n  </Styles>\r\n);\r\n\r\nexport default Icon;\r\n","import React from 'react'\r\nimport { VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport Icon from './Icon';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n//Icons made by <a href=\"https://www.flaticon.com/authors/ddara\" title=\"dDara\">dDara</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\r\n\r\nfunction TimelineInfo(props){\r\n  return(\r\n      <VerticalTimelineElement\r\n        id={props.id}\r\n        className=\"vertical-timeline-element--work\"\r\n        contentStyle={{ background: '#f8f7fc', color: '#000' }}\r\n        contentArrowStyle={{ borderRight: '7px solid  #f8f7fc' }}\r\n        date={props.date}\r\n        iconClassName=\"circle-border\"\r\n        iconStyle={{ background: props.backgroundColor, color: '#fff' }}\r\n        icon={<Icon />}\r\n      >\r\n        <h5 display=\"flex\">\r\n          {props.tools.map(tool => (\r\n            <Badge pill variant=\"dark\">{tool}</Badge>\r\n          ))}\r\n        </h5>\r\n        <h3 className=\"vertical-timeline-element-title\">{props.title}</h3>\r\n        <h5 className=\"vertical-timeline-element-subtitle\"><i>{props.reason}</i></h5>\r\n        <p>\r\n          {props.details.map(line => (\r\n            <React.Fragment>\r\n              {line} <br />\r\n            </React.Fragment>\r\n          ))}\r\n          <div className=\"btnContainer\">\r\n            {props.links.map(element => (\r\n              <Button variant=\"outline-dark\" href={element.link} size=\"sm\">{element.desc}</Button>\r\n            ))}\r\n          </div>\r\n        </p>\r\n      </VerticalTimelineElement>\r\n  )\r\n};\r\n\r\nexport default TimelineInfo;\r\n//{props.details[0] + \"\\n\"} <br />\r\n//{props.details[1]} <br />\r\n","import React from 'react'\r\nimport { VerticalTimeline }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport styled from 'styled-components';\r\nimport TimelineInfo from './components/TimelineInfo';\r\nimport projectData from './assets/projectData.json';\r\n\r\nconst Styles = styled.div`\r\n  .vertical-timeline::before{\r\n    background: ${props => (props.borderColor)};\r\n  }\r\n  .circle-border{\r\n    box-shadow: inset 0 2px 0 rgba(0,0,0,0.08),0 3px 0 0 rgba(0,0,0,0.05);\r\n    border: ${props => (\"4px solid\" + props.borderColor)}\r\n  }\r\n  .vertical-timeline-element--work .vertical-timeline-element-content {\r\n    border-top: ${props => (\"5px solid \" + props.borderColor)};\r\n  }\r\n  .badge-pill {\r\n    margin-right: .2em;\r\n    background: ${props => (props.borderColor)};\r\n  }\r\n  .btn-outline-dark {\r\n    margin-top: 5px;\r\n    margin-right: .6em;\r\n    border-color: ${props => (props.primaryColor)};\r\n    color: ${props => (props.primaryColor)};\r\n    &:hover {\r\n      color: ${props => (props.secondaryColor)};\r\n      background-color: ${props => (props.primaryColor)};\r\n      border-color: ${props => (props.primaryColor)};\r\n    }\r\n  }\r\n  .btnContainer{\r\n    display: block;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nconst Projects = (props) => (\r\n  <Styles\r\n    borderColor={props.others.[\"Border Color\"].validated}\r\n    primaryColor={props.button.[\"Primary Color\"].validated}\r\n    secondaryColor={props.button.[\"Secondary Color\"].validated}\r\n  >\r\n    <h2>Projects</h2>\r\n    <br/>\r\n    <VerticalTimeline layout='1-column'>\r\n      {projectData.map(data => (\r\n        <TimelineInfo\r\n          key={data.id}\r\n          id={data.id}\r\n          date={data.date}\r\n          title={data.title}\r\n          reason={data.reason}\r\n          tools={Array.from(data.tools)}\r\n          details={Array.from(data.details)}\r\n          links={Array.from(data.links)}\r\n          backgroundColor={props.others.[\"Background Color\"].validated}\r\n        />\r\n      ))}\r\n    </VerticalTimeline>\r\n    <br/>\r\n  </Styles>\r\n)\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport styled from 'styled-components';\r\nimport CV from './assets/CV.pdf';\r\n\r\nconst Styles = styled.div`\r\n  .pdf {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nclass Resume extends Component {\r\n  state = {\r\n    width: 0\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { width: 0 };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  calculateWidth() {\r\n    let calculateWidth = this.state.width - 20;\r\n    return calculateWidth < 1000 ? calculateWidth : 1000;\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <Styles>\r\n        <h2>Resume</h2>\r\n        <Document className=\"pdf\" file={CV} options={{ workerSrc: \"/pdf.worker.js\" }}>\r\n          <Page pageNumber={1} width={this.calculateWidth()}/>\r\n        </Document>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React from 'react'\n\nexport const NoMatch = () => (\n  <div>\n    <h2>No Match</h2>\n  </div>\n)\n\nexport default NoMatch;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nconst Layout = (props) => (\n  <Container>\n    {props.children}\n  </Container>\n)\n\nexport default Layout;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/NavBar';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: ${props => (props.backgroundColor)};\n  }\n\n  a {\n    color : ${props => (props.textColor)};\n\n    &:hover {\n      text-decoration: none;\n      color: ${props => (props.hoverColor)};\n    }\n  }\n`;\n\nfunction NavigationBar(props) {\n  return(\n    <Styles\n      backgroundColor={props.navbar.[\"Background Color\"].validated}\n      textColor={props.navbar.[\"Text Color\"].validated}\n      hoverColor={props.navbar.[\"Hover Color\"].validated}\n    >\n      <Navbar expand=\"lg\" variant=\"dark\">\n        <Navbar.Brand>\n          <Link to=\"/\">PSYmoom</Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Item>\n              <Nav.Link>\n                <Link to=\"/\">Home</Link>\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link>\n                <Link to=\"/projects\">Projects</Link>\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link>\n                <Link to=\"/resume\">Resume</Link>\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </Styles>\n  )\n}\n\nexport default NavigationBar;\n","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport styled from 'styled-components';\r\nimport mtnImage from '../assets/bkimg.jpg';\r\n\r\nconst Styles = styled.div`\r\n  .jumbo {\r\n    background: url(${mtnImage});\r\n    background-size: cover;\r\n    height: 200px;\r\n    position: relative;\r\n    z-index: -2;\r\n  }\r\n  .overlay {\r\n    background-color: #000;\r\n    opacity: 0.6;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: -1;\r\n  }\r\n  .textIn {\r\n    color:#efefef\r\n  }\r\n`;\r\n\r\nconst Jumbo = () => (\r\n  <Styles>\r\n    <Jumbotron fluid className=\"jumbo\">\r\n      <div className=\"overlay\"></div>\r\n      <Container>\r\n        <h1 className=\"textIn\">Hey! I am Symoom</h1>\r\n        <p className=\"textIn\">This is a website to help me keep track of my projects.</p>\r\n      </Container>\r\n    </Jumbotron>\r\n  </Styles>\r\n)\r\n\r\nexport default Jumbo;\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Styles = styled.div`\r\n  .scrollUp{\r\n    border-color: ${props => (props.primaryColor)};\r\n    color: ${props => (props.primaryColor)};\r\n    position: fixed;\r\n    bottom: 10px;\r\n    right: 10px;\r\n    opacity: 0.4;\r\n    animation: appear 1s ease;\r\n    animation-iteration-count: 1;\r\n    &:hover {\r\n      opacity: 1;\r\n      color: ${props => (props.secondaryColor)};\r\n      background-color: ${props => (props.primaryColor)};\r\n      border-color: ${props => (props.primaryColor)};\r\n      animation: wiggle 1s ease;\r\n      animation-iteration-count: 1;\r\n    }\r\n    @keyframes wiggle {\r\n      20% { transform: translateY(6px); }\r\n      40% { transform: translateY(-6px); }\r\n      60% { transform: translateY(4px); }\r\n      80% { transform: translateY(-2px); }\r\n      100% { transform: translateY(0); }\r\n    }\r\n    @keyframes appear {\r\n      0% { opacity: 0; }\r\n      50% { opacity: 0.2; }\r\n      100% { opacity: 0.4; }\r\n    }\r\n  }\r\n`;\r\n\r\nclass ScrollUp extends Component {\r\n  state = {\r\n    hasScrolled: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasScrolled: false };\r\n    this.updateScrolled = this.updateScrolled.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateScrolled();\r\n    window.addEventListener('scroll', this.updateScrolled);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.updateScrolled);\r\n  }\r\n\r\n  updateScrolled() {\r\n    if (window.pageYOffset > 100 && !this.state.hasScrolled)\r\n      this.setState({ hasScrolled: true })\r\n    else if (window.pageYOffset < 100 && this.state.hasScrolled)\r\n      this.setState({ hasScrolled: false })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasScrolled) {\r\n      return(\r\n        <Styles\r\n          primaryColor={this.props.button.[\"Primary Color\"].validated}\r\n          secondaryColor={this.props.button.[\"Secondary Color\"].validated}\r\n        >\r\n          <Button\r\n            variant=\"outline-dark\"\r\n            className=\"scrollUp\"\r\n            onClick={() => {window.scrollTo({top: 0, behavior: 'smooth' })}}\r\n          >\r\n            <FontAwesomeIcon\r\n              className=\"logo-style\"\r\n              icon={faChevronUp}\r\n            />\r\n          </Button>\r\n        </Styles>\r\n      );\r\n    } else {\r\n      return <React.Fragment />\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default ScrollUp;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport update from 'immutability-helper';\r\n\r\nimport Home from './Home';\r\nimport Projects from './Projects';\r\nimport Resume from './Resume';\r\nimport NoMatch from './NoMatch';\r\nimport Layout from './components/Layout';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport Jumbo from './components/Jumbo';\r\nimport ScrollUp from './components/ScrollUp';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    upperbound: \"#FFFFFF\",\r\n    lowerbound: \"#000000\",\r\n    colorChanger:{\r\n      \"Navigation Bar\": {\r\n        \"Background Color\": {\r\n          validated: \"#222\",\r\n          unvalidated: \"\",\r\n          error: false\r\n        },\r\n        \"Text Color\": {\r\n          validated:  \"#bbb\",\r\n          unvalidated: \"\",\r\n          error: false\r\n        },\r\n        \"Hover Color\": {\r\n          validated:  \"white\",\r\n          unvalidated: \"\",\r\n          error: false\r\n        }\r\n      },\r\n      \"Button\": {\r\n        \"Primary Color\": {\r\n          validated: \"#343a40\",\r\n          unvalidated: \"\",\r\n          error: false\r\n        },\r\n        \"Secondary Color\": {\r\n          validated:  \"#FFFFFF\",\r\n          unvalidated: \"\",\r\n          error: false\r\n        }\r\n      },\r\n      \"Others\": {\r\n        \"Background Color\": {\r\n          validated: \"#a9a9a9\",\r\n          unvalidated: \"\",\r\n          error: false\r\n        },\r\n        \"Border Color\": {\r\n          validated:  \"#43464B\",\r\n          unvalidated: \"\",\r\n          error: false\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.handleButtonClick = this.handleButtonClick.bind(this);\r\n  }\r\n\r\n  handleValueChange(variables, value) {\r\n    let newState = update(this.state, {\r\n      colorChanger : {\r\n        [variables[0]] : {\r\n          [variables[1]] : {\r\n            unvalidated: {$set: value},\r\n            error: {$set: false}\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  handleButtonClick(variables) {\r\n    let unvalidated = String(this.state.colorChanger.[variables[0]].[variables[1]].unvalidated).toUpperCase();\r\n\r\n    if (unvalidated.length === 7 && unvalidated >= this.state.lowerbound && unvalidated <= this.state.upperbound) {\r\n      let newState = update(this.state, {\r\n        colorChanger : {\r\n          [variables[0]] : {\r\n            [variables[1]] : {\r\n              validated: {$set: unvalidated}\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      this.setState(newState);\r\n    } else {\r\n      let newState = update(this.state, {\r\n        colorChanger : {\r\n          [variables[0]] : {\r\n            [variables[1]] : {\r\n              error: {$set: true}\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router basename=\"/react-portfolio\">\r\n        <NavigationBar navbar={this.state.colorChanger.[\"Navigation Bar\"]}/>\r\n        <Jumbo />\r\n        <Layout>\r\n          <Switch>\r\n            <Route\r\n              exact path=\"/\"\r\n              render={(props) => (<Home {...props}\r\n                onValueChange={this.handleValueChange}\r\n                onButtonClick={this.handleButtonClick}\r\n                allComponents={this.state.colorChanger}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact path=\"/projects\"\r\n              render={(props) => (<Projects {...props}\r\n                others={this.state.colorChanger.[\"Others\"]}\r\n                button={this.state.colorChanger.[\"Button\"]}\r\n                />\r\n              )}\r\n            />\r\n            <Route exact path=\"/resume\" component={Resume} />\r\n            <Route component={NoMatch} />\r\n          </Switch>\r\n        </Layout>\r\n        <ScrollUp button={this.state.colorChanger.[\"Button\"]} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 54;","module.exports = __webpack_public_path__ + \"static/media/CV.193fd0ab.pdf\";","module.exports = __webpack_public_path__ + \"static/media/bkimg.11f955cf.jpg\";"],"sourceRoot":""}